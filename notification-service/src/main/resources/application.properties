spring.application.name=notification-service
server.port=8083
server.shutdown=graceful
spring.output.ansi.enabled=always
logging.level.root=INFO
logging.level.org.springframework=INFO
######## Notification Service Configuration  #########
notifications.books-service-url=${BOOKS_SERVICE_URL:http://localhost:8081}

notifications.order-events-exchange=orders-exchange
notifications.new-orders-queue=new-orders
notifications.delivery-in-progress-queue=delivery-in-progress-orders
notifications.delivered-orders-queue=delivered-orders
notifications.cancelled-orders-queue=cancelled-orders
notifications.error-orders-queue=error-orders

######## Actuator Configuration  #########
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.tracing.enabled=false
management.tracing.sampling.probability=1.0

######### Swagger Configuration  #########

####### OAuth2 Configuration  #########

######## Database Configuration  #########
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/orders_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:123456}
spring.jpa.open-in-view=false
spring.jpa.show-sql=true
# Log SQL statements with format parameters
spring.jpa.properties.hibernate.format_sql=true


######## RabbitMQ Configuration  #########
spring.rabbitmq.host=${RABBITMQ_HOST:127.0.0.1}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
